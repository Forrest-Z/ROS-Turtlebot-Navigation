<?xml version="1.0"?>
<robot name="diff_drive" xmlns:xacro="http://www.ros.org/wiki/xacro">

<xacro:property name="props" value="${load_yaml('$(find nuturtle_description)/config/diff_params.yaml')}" />

<xacro:property name="wheel_base" value="${props['wheel_base']}" />
<xacro:property name="chassis_length" value="${props['chassis_length']}" />
<xacro:property name="chassis_thickness" value="${props['chassis_thickness']}" />

<xacro:property name="wheel_radius" value="${props['wheel_radius']}" />
<xacro:property name="wheel_width" value="${props['wheel_width']}" />

<xacro:property name="wheel_axle_offset" value="${props['wheel_axle_offset']}"/>

<xacro:property name="caster_radius" value="${(wheel_radius - wheel_axle_offset)/2}" />

<!-- mass of chassis -->
<xacro:property name="M" value="${0.94}" />
<!-- mass of wheel  -->
<xacro:property name="m" value="${0.03}" />



<!-- BASE-FOOTPRINT -->
<link name="base_link"/>
<!-- Base Scan -->
<link name="base_scan"/>


<!-- chassis -->
<link name="base_body" >

  <inertial>
    <origin xyz="${chassis_length/2 - wheel_radius} 0 0" rpy="0 0 0"/>
    <mass value="${M}"/>
    <inertia ixx="${1/12*M*(chassis_length**2+chassis_thickness**2)}"  ixy="0"  ixz="0" iyy="${1/12*M*((wheel_base - wheel_width)**2+chassis_thickness**2)}" iyz="0" izz="${1/12*M*(chassis_length**2+(wheel_base - wheel_width)**2)}" />
  </inertial>

  <visual>
    <origin xyz="${chassis_length/2 - wheel_radius} 0 0" rpy="0 0 0" />
    <geometry>
      <box size="${chassis_length} ${wheel_base - wheel_width} ${chassis_thickness}" />
    </geometry>
    <material name="Blue">
      <color rgba="0 0 1 0.6"/>
    </material>
  </visual>

  <collision>
    <origin xyz="${chassis_length/2 - wheel_radius} 0 0" rpy="0 0 0"/>
    <geometry>
      <box size="${chassis_length} ${wheel_base - wheel_width} ${chassis_thickness}" />
    </geometry>
  </collision>

</link>


<!-- left wheel -->

<link name="left_wheel">

  <inertial>
    <origin xyz="0 0 0" rpy="${-pi/2} 0 0"/>
    <mass value="${m}"/>
    <inertia ixx="${1/12*m*(3*wheel_radius**2 + wheel_width**2)}"  ixy="0"  ixz="0" iyy="${1/12*m*(3*wheel_radius**2 + wheel_width**2)}" iyz="0" izz="${0.5*m*wheel_radius**2}" />
  </inertial>

  <visual>
    <origin xyz="0 0 0" rpy="${-pi/2} 0 0" />
    <geometry>
      <cylinder radius="${wheel_radius}" length="${wheel_width}" />
    </geometry>
    <material name="red">
      <color rgba="1 0 0 0.8"/>
    </material>
  </visual>

  <collision>
    <origin xyz="0 0 0" rpy="${-pi/2} 0 0"/>
    <geometry>
      <cylinder radius="${wheel_radius}" length="${wheel_width}" />
    </geometry>
  </collision>

</link>


<!-- right wheel -->

<link name="right_wheel">

  <inertial>
    <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
    <mass value="${m}"/>
    <inertia ixx="${1/12*m*(3*wheel_radius**2 + wheel_width**2)}"  ixy="0"  ixz="0" iyy="${1/12*m*(3*wheel_radius**2 + wheel_width**2)}" iyz="0" izz="${0.5*m*wheel_radius**2}" />
  </inertial>

  <visual>
    <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
    <geometry>
      <cylinder radius="${wheel_radius}" length="${wheel_width}" />
    </geometry>
    <material name="red">
      <color rgba="1 0 0 0.8"/>
    </material>
  </visual>

  <collision>
    <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
    <geometry>
      <cylinder radius="${wheel_radius}" length="${wheel_width}" />
    </geometry>
  </collision>

</link>



<!-- caster wheel -->

<link name="caster">

  <visual>
    <origin xyz="0 0 0" rpy="0 0 0" />
    <geometry>
      <sphere radius="${caster_radius}" />
    </geometry>
    <material name="Black" />
  </visual>

  <collision>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <sphere radius="${caster_radius}" />
    </geometry>
  </collision>

</link>



<!-- joints -->

<joint name="base" type="fixed">
  <origin xyz="${-wheel_radius} 0 ${chassis_thickness/2 - wheel_axle_offset + wheel_radius}" rpy="0 0 0" />
  <parent link="base_link"/>
  <child link="base_body" />
</joint>


<joint name="base_lidar" type="fixed">
  <origin xyz="0 0 ${chassis_thickness/2 + 0.005}" rpy="0 0 0" />
  <axis xyz="0 1 0"/>
  <parent link="base_body" />
  <child link="base_scan" />
</joint>


<joint name="left_wheel_axle" type="continuous">
  <origin xyz="0 ${wheel_base/2} ${-chassis_thickness/2 + wheel_axle_offset}" rpy="0 0 0" />
  <axis xyz="0 1 0"/>
  <parent link="base_body" />
  <child link="left_wheel" />
</joint>


<joint name="right_wheel_axle" type="continuous">
  <origin xyz="0 ${-wheel_base/2} ${-chassis_thickness/2 + wheel_axle_offset}" rpy="0 0 0" />
  <axis xyz="0 1 0"/>
  <parent link="base_body" />
  <child link="right_wheel" />
</joint>


<joint name="caster_joint" type="fixed">
  <origin xyz="${chassis_length - wheel_radius - caster_radius} 0 ${-chassis_thickness/2 - caster_radius}" rpy="0 0 0" />
  <parent link="base_body" />
  <child link="caster" />
</joint>

</robot>
